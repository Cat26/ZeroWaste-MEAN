{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/events/events.component.ts","webpack:///src/app/components/events/events.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","EventsComponent","HomeComponent","LoginComponent","authService","router","flashMessage","user","username","password","authenticateUser","subscribe","data","success","storeUserData","token","show","msg","cssClass","timeout","navigate","onLoginSubmit","NavbarComponent","logout","ProfileComponent","email","name","getProfile","profile","error","console","log","RegisterComponent","validateService","validateRegister","validateEmail","registerUser","onRegisterSubmit","AuthGuard","loggedIn","AuthService","http","httpOptions","headers","post","loadToken","authToken","get","localStorage","setItem","JSON","stringify","getItem","clear","providedIn","ValidateService","undefined","re","test","String","toLowerCase","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {RegisterComponent} from \"./components/register/register.component\";\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {EventsComponent} from \"./components/events/events.component\";\nimport {ProfileComponent} from \"./components/profile/profile.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\n\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'events', component: EventsComponent},\n  {path:'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'zerowaste-frontend';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { EventsComponent } from './components/events/events.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule} from \"@angular/common/http\";\n\nimport { ValidateService } from \"./services/validate.service\";\nimport { AuthService } from \"./services/auth.service\";\nimport { FlashMessagesModule } from \"angular2-flash-messages\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    EventsComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>events works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.authService.storeUserData(data.token, data.user);\n          this.flashMessage.show(\n            data.msg,\n            {cssClass: 'alert-success', timeout: 3000}\n          );\n\n          this.router.navigate(['/profile']);\n        } else {\n          this.flashMessage.show(\n            data.msg,\n            {cssClass: 'alert-danger', timeout: 5000}\n          );\n          this.router.navigate(['/login']);\n        }\n      }\n    )\n  }\n\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show(\n      'You are logged out',\n      {cssClass:'alert-success', timeout: 3000}\n      );\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">Zero Waste</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a [routerLink]=\"['/']\" class=\"nav-link\">Home</a>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\"\n           data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Categories\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a class=\"dropdown-item\" [routerLink]=\"['/events']\" >Events</a>\n          <a class=\"dropdown-item\" href=\"#\">Shops</a>\n          <a class=\"dropdown-item\" href=\"#\">Personal Goals</a>\n        </div>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav\">\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a [routerLink]=\"['/profile']\" class=\"nav-link\">Profile</a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a [routerLink]=\"['/register']\" class=\"nav-link\">Register</a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a [routerLink]=\"['/login']\" class=\"nav-link\">Login</a>\n      </li>\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n        <a href=\"#\" (click)=\"onLogoutClick()\" class=\"nav-link\">Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user = {\n    email: '',\n    name: '',\n    username: ''\n  };\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile: any) => {\n      this.user = profile.user\n    },\n      error => {\n        console.log(error);\n        return false;\n      });\n  }\n\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{user.name}}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{user.username}}</li>\n    <li class=\"list-group-item\">Email: {{user.email}}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from \"../../services/validate.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n\n    // validate fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show(\n        'Please fill in all fields',\n        {cssClass: 'alert-danger', timeout: 3000}\n        );\n      return false;\n    }\n    // validate email\n    if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show(\n        'Please use a valid email',\n        {cssClass: 'alert-danger', timeout: 3000}\n      );\n    }\n    // Register user\n    this.authService.registerUser(user).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.flashMessage.show(\n            data.msg,\n            {cssClass: 'alert-success', timeout: 3000}\n          );\n          this.router.navigate(['/login']);\n        } else {\n          this.flashMessage.show(\n            data.msg,\n            {cssClass: 'alert-success', timeout: 3000}\n          );\n          this.router.navigate(['/register']);\n        }\n      }\n    );\n  }\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\"class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\"class=\"form-control\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post('http://localhost:3000/users/register', user, httpOptions);\n  }\n\n  authenticateUser(user) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post('http://localhost:3000/users/authenticate', user, httpOptions);\n  }\n\n  getProfile() {\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': this.authToken\n      })\n    };\n    return this.http.get('http://localhost:3000/users/profile', httpOptions);\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    return localStorage.getItem('id_token') !== null;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.password == undefined || user.username == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}